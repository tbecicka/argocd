global:
  #smtp_smarthost: 'mail'
  smtp_from: 'alertmanager@6shore.net'

route:
  # The root route must not have any matchers as it is the entry point for
  # all alerts. It needs to have a receiver configured so alerts that do not
  # match any of the sub-routes are sent to someone.
  receiver: telegram

  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
  #
  # To aggregate by all possible labels use '...' as the sole label name. 
  # This effectively disables aggregation entirely, passing through all 
  # alerts as-is. This is unlikely to be what you want, unless you have 
  # a very low alert volume or your upstream notification system performs 
  # its own grouping. Example: group_by: [...]
  group_by: ['instance']

  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first
  # notification.
  group_wait: 30s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 5m

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 3h

  # All the above attributes are inherited by all child routes and can
  # overwritten on each.
  
  routes:
  - receiver: telegram
    match_re:
      severity: critical

# Inhibition rules allow to mute a set of alerts given that another alert is
# firing.
# We use this to mute any warning-level notifications if the same alert is
# already critical.
#inhibit_rules:
#- source_match:
#    severity: 'critical'
#  target_match:
#    severity: 'warning'
#  # Apply inhibition if the alertname is the same.
#  equal: ['alertname']
#

receivers:
- name: blackhole
- name: telegram
  webhook_configs:
  - send_resolved: true
    url: 'http://telegram-bot'
